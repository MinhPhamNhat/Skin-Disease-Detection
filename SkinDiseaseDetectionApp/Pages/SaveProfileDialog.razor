@using Cropper.Blazor.Components
@using MudBlazor;
@using Cropper.Blazor.Models;

<MudDialog>
    <DialogContent>
        <MudForm>
            <MudGrid Class="justify-space-between" Style="max-width: 800px;">
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="@UserDetail.Fullname" T="string" Label="Họ và tên" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudDatePicker @bind-Value="@UserDetail.DateOfBirth" Label="Ngày sinh" />
                </MudItem>
            </MudGrid>

            <MudGrid Class="justify-space-between" Style="max-width: 800px;">
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="@UserDetail.Address" T="string" Label="Địa chỉ" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudRadioGroup @bind-Value="@UserDetail.Gender" T="bool">
                        <MudRadio Value="true" Color="Color.Primary">Nam</MudRadio>
                        <MudRadio Value="false" Color="Color.Primary">Nữ</MudRadio>
                    </MudRadioGroup>
                </MudItem>
            </MudGrid>
            <MudGrid Class="justify-space-between" Style="max-width: 800px;">
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="UserDetail.Email" Mask="@RegexMask.Email()" Label="Email Address" T="string"
                        HelperText="@RegexMask.Email().Mask" Variant="@Variant.Text" Clearable />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="UserDetail.PhoneNumber" T="string" Label="Số điện thoại" Adornment="Adornment.Start" AdornmentText="+84"
                        Clearable HideSpinButtons="true" />
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton>Lưu kết quả và liên hệ</MudButton>
        <MudButton OnClick="Save" Color="Color.Primary">Lưu kết quả</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public string Image { get; set; }
    [Parameter] public string DiagnoseResult { get; set; }
    [Parameter] public double DiagnoseResultAccuracy { get; set; }

    [Inject] public Services.Interfaces.IUserService userService { get; set; }

    private UserDetailDto? UserDetail { get; set; } = new UserDetailDto();

    protected override async Task OnInitializedAsync()
    {
        var userId = await userService.GetUserId();
        UserDetail = await userService.GetUserDetail();
        if (UserDetail == null){
            UserDetail = new UserDetailDto()
            {
                Address ="",
                DateOfBirth = DateTime.Now,
                Email = "",
                Fullname = "",
                Gender = false,
                PhoneNumber = "",
                UserId = userId
            };
        }
    }

    private async Task Save()
    {
        var userHistory = new UserHistory
        {
            DiagnoseResult = DiagnoseResult,
            DiagnoseResultAccuracy = DiagnoseResultAccuracy,
            Image = Image,
            DateCreated = DateTime.Now,
            Address = UserDetail.Address,
            DateOfBirth = UserDetail.DateOfBirth.GetValueOrDefault(),
            Email = UserDetail.Email,
            FullName = UserDetail.Fullname,
            Gender = UserDetail.Gender,
            PhoneNumber = UserDetail.PhoneNumber,
            UserId = UserDetail.UserId,
        };

        await userService.SaveUserDetail(userHistory);
        MudDialog.Close(DialogResult.Ok(true));
    }
}